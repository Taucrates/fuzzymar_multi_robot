<launch>
  <!-- Arguments -->
  <arg name="robot_name" default="kobuki"/>
  
  <!-- Move robot base -->
  <group ns="$(arg robot_name)">

    <!-- Move base -->
    <arg name="move_forward_only" default="True"/>

    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="log">

      <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
      <rosparam file="$(find fuzzymar_multi_robot)/config/ports/costmap_common_params/$(arg robot_name).yaml" command="load" ns="global_costmap" />
      <rosparam file="$(find fuzzymar_multi_robot)/config/ports/costmap_common_params/$(arg robot_name).yaml" command="load" ns="local_costmap" /> 
      <rosparam file="$(find fuzzymar_multi_robot)/config/ports/local_costmap_params.yaml" command="load" />
      <rosparam file="$(find fuzzymar_multi_robot)/config/ports/global_costmap_params.yaml" command="load" />
      <rosparam file="$(find fuzzymar_multi_robot)/config/ports/move_base_params.yaml" command="load" />
      <rosparam file="$(find fuzzymar_multi_robot)/config/ports/dwa_local_planner_params.yaml" command="load" />
      

      <param name="controller_frequency" value="5.0" />
      <param name="oscillation_timeout" value="1.0" /> <!-- When DWA is not able to produce a path waits 'oscillation_timeout' secs to begin recovery behaviors-->
      <param name="max_planning_retries" value="-1" /> 
      <param name="recovery_behavior_enabled" value="False" /> 
      <param name="clearing_rotation_allowed" value="False" /> 

      <!-- Descomentar esta linea se se utiliza navigation stack con gmapping en lugar de amcl
        <param name="global_costmap/global_frame" value="$(arg robot_name)/map"/>-->
      <param name="local_costmap/robot_base_frame" value="$(arg robot_name)/base_footprint"/>
      <param name="local_costmap/global_frame" value="$(arg robot_name)/odom"/>  
      <param name="global_costmap/robot_base_frame" value="$(arg robot_name)/base_footprint"/>
      <param name="global_costmap/global_frame" value="map"/> 

      

      <!-- Descomentar esta linea se se utiliza navigation stack con gmapping en lugar de amcl
        (Comprobar si es necesario, es posible que no haga falta aÃ±adir esta linea)
        <remap from="map" to="$(arg robot_name)/map"/>-->
      <remap from="map" to="/map"/>
      <remap from="cmd_vel" to="mobile_base/commands/raw_velocity"/>
      <remap from="odom" to="odom"/>
      <param name="DWAPlannerROS/min_vel_x" value="0.0" if="$(arg move_forward_only)" />

      <param name="local_costmap/obstacle_layer/laser_scan/topic" value="/$(arg robot_name)/scan"/>
      <param name="local_costmap/obstacle_layer/laser_scan/sensor_frame" value="$(arg robot_name)/base_scan"/>

      <param name="global_costmap/laser_scan_sensor/sensor_frame" value="$(arg robot_name)/base_scan"/>
      <param name="global_costmap/laser_scan_sensor/topic" value="/$(arg robot_name)/scan"/> 
      <param name="global_costmap/obstacle_layer/laser_scan/topic" value="/$(arg robot_name)/scan"/>
      <param name="global_costmap/obstacle_layer/laser_scan/sensor_frame" value="$(arg robot_name)/base_scan"/>

      <param name="local_costmap/obstacle_layer/laser_scan/inf_is_valid" value="true"/>

    </node>
  </group>

</launch>
